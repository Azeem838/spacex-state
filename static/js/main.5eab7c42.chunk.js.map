{"version":3,"sources":["actions/index.js","reducers/index.js","containers/Navbar.js","containers/Home.js","components/Loading.js","App.js","serviceWorker.js","index.js"],"names":["getLaunches","launches","type","loadLaunches","dispatch","fetch","then","response","json","data","getRockets","rockets","loadRockets","changeFilter","filter","initialState","id","name","images","rootReducer","state","action","map","rocket","push","flickr_images","newfilter","NavBar","handleFilter","e","props","target","getAttribute","elems","document","querySelectorAll","M","Sidenav","init","rocketNames","this","key","data-testid","className","to","onClick","data-key","href","data-target","React","Component","connect","withRouter","Home","src","alt","style","fontSize","actionCreators","Loading","Launches","lazy","Launch","App","exact","path","component","fallback","Boolean","window","location","hostname","match","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5eab7c42.chunk.js","sourcesContent":["export function getLaunches(launches) {\n  return {\n    type: 'ALL_LAUNCHES',\n    launches,\n  };\n}\n\nexport function loadLaunches() {\n  return dispatch => fetch('https://api.spacexdata.com/v4/launches')\n    .then(response => response.json())\n    .then(data => {\n      dispatch(getLaunches(data));\n    });\n}\n\nexport function getRockets(rockets) {\n  return {\n    type: 'ALL_ROCKETS',\n    rockets,\n  };\n}\n\nexport function loadRockets() {\n  return dispatch => fetch('https://api.spacexdata.com/v4/rockets')\n    .then(response => response.json())\n    .then(data => {\n      dispatch(getRockets(data));\n    });\n}\n\nexport function changeFilter(filter) {\n  return { type: 'CHANGE_FILTER', filter };\n}\n","const initialState = {\n  launches: [],\n  rockets: [{ id: null, name: '', images: [] }],\n  filter: 'all',\n};\n\nconst rootReducer = (state = initialState, action) => {\n  if (action.type === 'ALL_LAUNCHES') {\n    return {\n      ...state,\n      launches: action.launches,\n    };\n  }\n  if (action.type === 'ALL_ROCKETS') {\n    const rockets = [];\n    action.rockets.map(rocket => rockets.push({\n      id: rocket.id,\n      name: rocket.name,\n      images: rocket.flickr_images,\n    }));\n    return {\n      ...state,\n      rockets,\n    };\n  }\n  if (action.type === 'CHANGE_FILTER') {\n    const newfilter = action.filter;\n    return {\n      ...state,\n      filter: newfilter,\n    };\n  }\n  return {\n    ...state,\n  };\n};\n\nexport default rootReducer;\n","import React from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport M from 'materialize-css';\nimport PropTypes from 'prop-types';\nimport { changeFilter } from '../actions/index';\n\nclass NavBar extends React.Component {\n  componentDidMount() {\n    const elems = document.querySelectorAll('.sidenav');\n    M.Sidenav.init(elems, {});\n  }\n\n  handleFilter = e => {\n    const { changeFilter } = this.props;\n    changeFilter(e.target.getAttribute('data-key'));\n  };\n\n  render() {\n    const { rockets } = this.props;\n    const rocketNames = rockets.map(rocket => (\n      <li key={rocket.id}>\n        <NavLink\n          data-testid={`${rocket.name}-tab`}\n          className={\n            rocket.name === 'Starship' ? 'nav-link disabled' : 'nav-link'\n          }\n          to={`/launches/${rocket.name}`}\n          onClick={this.handleFilter}\n          data-key={rocket.id}\n        >\n          {rocket.name}\n        </NavLink>\n      </li>\n    ));\n    return (\n      <div>\n        <nav className=\"deep-orange accent-1\">\n          <div className=\"nav-contain browser-default\">\n            <NavLink\n              data-testid=\"logo-link\"\n              className=\"brand browser-default\"\n              to=\"/\"\n            >\n              SpaceX Stats\n            </NavLink>\n            <a\n              href=\"#menu\"\n              data-target=\"mobile-demo\"\n              className=\"sidenav-trigger\"\n            >\n              <i className=\"material-icons\">menu</i>\n            </a>\n            <ul id=\"nav-mobile\" className=\"hide-on-med-and-down\">\n              <li>\n                <NavLink\n                  data-testid=\"all-tab\"\n                  className=\"nav-link\"\n                  to=\"/launches/all\"\n                  onClick={this.handleFilter}\n                  data-key=\"all\"\n                  href=\"#all\"\n                >\n                  All\n                </NavLink>\n              </li>\n              {rocketNames}\n              <li>\n                <NavLink\n                  data-testid=\"upcoming-tab\"\n                  className=\"nav-link\"\n                  to=\"/launches/upcoming\"\n                  onClick={this.handleFilter}\n                  data-key=\"upcoming\"\n                  href=\"#upcoming\"\n                >\n                  Upcoming\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                  data-testid=\"previous-tab\"\n                  className=\"nav-link\"\n                  to=\"/launches/previous\"\n                  onClick={this.handleFilter}\n                  data-key=\"previous\"\n                  href=\"#previous\"\n                >\n                  Previous\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n        </nav>\n\n        <ul className=\"sidenav\" id=\"mobile-demo\">\n          <li>\n            <NavLink\n              data-testid=\"all-tab\"\n              className=\"nav-link\"\n              to=\"/launches/all\"\n              onClick={this.handleFilter}\n              data-key=\"all\"\n              href=\"#all\"\n            >\n              All\n            </NavLink>\n          </li>\n          {rocketNames}\n          <li>\n            <NavLink\n              data-testid=\"upcoming-tab\"\n              className=\"nav-link\"\n              to=\"/launches/upcoming\"\n              onClick={this.handleFilter}\n              data-key=\"upcoming\"\n              href=\"#upcoming\"\n            >\n              Upcoming\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              data-testid=\"previous-tab\"\n              className=\"nav-link\"\n              to=\"/launches/previous\"\n              onClick={this.handleFilter}\n              data-key=\"previous\"\n              href=\"#previous\"\n            >\n              Previous\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  rockets: state.rockets,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeFilter: filter => {\n    dispatch(changeFilter(filter));\n  },\n});\n\nNavBar.propTypes = {\n  changeFilter: PropTypes.func.isRequired,\n  rockets: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(NavBar));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport * as actionCreators from '../actions/index';\n\nclass Home extends Component {\n  componentDidMount() {\n    const { loadRockets } = this.props;\n    loadRockets();\n  }\n\n  handleFilter = e => {\n    const { changeFilter } = this.props;\n    changeFilter(e.target.getAttribute('data-key'));\n  };\n\n  render() {\n    const { rockets } = this.props;\n    const images = rockets.map(rocket => (\n      <NavLink\n        to={`/launches/${rocket.name}`}\n        onClick={this.handleFilter}\n        key={rocket.id + rocket.name}\n        data-key={rocket.id}\n      >\n        <div className=\"img__wrap\" data-key={rocket.id}>\n          <img\n            data-key={rocket.id}\n            className=\"img__img\"\n            src={rocket.images[0]}\n            alt={rocket.name}\n          />\n          <div className=\"img__description\" data-key={rocket.id}>\n            <div className=\"img__text\" data-key={rocket.id}>\n              {rocket.name}\n            </div>\n          </div>\n        </div>\n      </NavLink>\n    ));\n\n    return (\n      <div className=\"jumbotron\">\n        <div className=\"container\">\n          <h1 data-testid=\"home-title\">SpaceX Stats</h1>\n          <p style={{ fontSize: '1.5rem' }} data-testid=\"home-details\">\n            View your favourite SpaceX launches, filter by your favourite rocket\n            and relive History!\n          </p>\n          <div data-testid=\"home-images\" className=\"home-images\">\n            {images}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  rockets: state.rockets,\n});\n\nHome.propTypes = {\n  rockets: PropTypes.arrayOf(PropTypes.object).isRequired,\n  changeFilter: PropTypes.func.isRequired,\n  loadRockets: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, actionCreators)(withRouter(Home));\n","import React from 'react';\n\nfunction Loading() {\n  return (\n    <div className=\"preloader-wrapper big active preloader\">\n      <div className=\"spinner-layer spinner-red\">\n        <div className=\"circle-clipper left\">\n          <div className=\"circle\" />\n        </div>\n        <div className=\"gap-patch\">\n          <div className=\"circle\" />\n        </div>\n        <div className=\"circle-clipper right\">\n          <div className=\"circle\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Loading;\n","import React, { Suspense, lazy } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport NavBar from './containers/Navbar';\nimport Home from './containers/Home';\nimport Loading from './components/Loading';\n\nconst Launches = lazy(() => import('./containers/Launches'));\nconst Launch = lazy(() => import('./containers/LaunchDetails'));\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <NavBar />\n        <Route exact path=\"/\" component={Home} />\n        <Suspense fallback={Loading()}>\n          <Switch>\n            <Route path=\"/launches\" component={Launches} />\n            <Route path=\"/:launch_id\" component={Launch} />\n          </Switch>\n        </Suspense>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/* eslint-disable no-use-before-define */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers/index';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}